(()=>{"use strict";class t{constructor(t,s,i,e){this.hitsIncurred=0,this.sunk=!1,this.length=t,this.x=s,this.y=i,this.orientation=e}hit(){this.hitsIncurred++}isSunk(){return this.hitsIncurred==this.length&&(this.sunk=!0,!0)}}class s{constructor(t){this.name=t,this.sayName=function(){console.log(`Hello, I'm ${this.name}!`)}}}class e{orientations=["v","h"];constructor(t){console.log("Creating Board"),this.rows=10,this.cols=10,this.board=[],this.ships=[],this.player=t;for(let t=0;t<this.rows;t++){this.board[t]=[];for(let s=0;s<this.cols;s++)this.board[t].push(new r)}this.populateShips()}printToConsole(){const t=this.board.map((t=>t.map((t=>t.getValue()))));console.log(t)}populateShips(){for(;this.ships.length<5;){let s=Math.floor(Math.random()*this.orientations.length),i=this.orientations[s],e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),o=Math.floor(5*Math.random())+1,a=this.validPlacement(o,e,r,i);if(!0===a[0]){let s=new t(o,e,r,a[1]);for(let t=0;t<o;t++)"vertical"===a[1]?this.board[e][r+t].placeShip(s):this.board[e+t][r].placeShip(s);this.ships.push(s)}}}validPlacement(t,s,i,e){if(s+t>this.rows||this.board[s][i].isOccupied())return[!1,""];if("v"==e){for(let e=i;e<i+t;e++)if(e>=this.cols||this.board[s][e].isOccupied())return[!1,""];for(let e=i;e<i+t;e++)if(e>=this.cols||this.board[s][e].isOccupied())return[!1,""];return i+t>=this.cols?[!1,""]:[!0,"vertical"]}for(let e=s;e<s+t;e++)if(e>=this.rows||this.board[e][i].isOccupied())return[!1,""];for(let e=s;e<s+t;e++)if(e>=this.rows||this.board[e][i].isOccupied())return[!1,""];return[!0,"horizontal"]}receiveAttack(t,s){(t>this.rows||s>this.cols)&&console.error("Invalid Hit: Out of Bounds");let i=this.board[t][s].strike();console.log("Attack at ("+t+","+s+") => "+i)}allSunk(){for(i in this.ships)if(0==i.isSunk())return!1;return!0}}class r{constructor(t,s){this.x=t,this.y=s,this.ship=null,this.misHit=!1,this.value="E"}placeShip(t){this.ship=t,this.value="X"}isOccupied(){return!!this.ship}getValue(){return this.value}strike(){return this.isOccupied()?(this.ship.hit(),this.value="H",!0):(this.value="M",!1)}}class o{constructor(){this.p1=new s("P1"),this.p2=new s("P2"),this.gameBoard=new e,this.activePlayer=this.p1,this.switchPlayerTurn=()=>{this.activePlayer=this.activePlayer===this.p1?this.p2:this.p1},this.getActivePlayer=()=>this.activePlayer}playRound(t){}}console.log("Script Started");const a=(new class{constructor(){this.game=new o,this.playerTurnDiv=document.querySelector(".turn");const t=document.querySelector(".board");this.updateScreen=()=>{t.textContent="";const s=this.game.gameBoard.board,i=this.game.getActivePlayer();this.playerTurnDiv.textContent=`${i.name}'s turn...`;var e=0;s.forEach((s=>{s.forEach(((s,i)=>{e++;const r=document.createElement("button");r.classList.add("cell"),r.dataset.column=i,r.dataset.idx=e,r.textContent=s.getValue()+"-"+e,t.appendChild(r)}))}))},t.addEventListener("click",(t=>{const s=t.target.dataset.idx;console.log("Tile: "+s+" clicked!"),s&&this.updateScreen()})),this.updateScreen()}}).game.gameBoard;a.printToConsole(),a.receiveAttack(1,1),a.receiveAttack(2,5),a.receiveAttack(7,3),a.receiveAttack(8,4),a.printToConsole(),console.log("Script Ended")})();