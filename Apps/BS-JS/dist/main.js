(()=>{"use strict";class t{constructor(t,e){this.hitsIncurred=0,this.length=t,this.orientation=e}hit(){this.hitsIncurred++}isSunk(){return this.hitsIncurred==this.length}}class e{constructor(t){this.name=t}}class i{orientations=["v","h"];constructor(t){this.rows=10,this.cols=10,this.board=[],this.ships=[],this.player=new e(t);for(let t=0;t<this.rows;t++){this.board[t]=[];for(let e=0;e<this.cols;e++)this.board[t].push(new s)}this.populateShips()}printToConsole(){const t=this.board.map((t=>t.map((t=>t.getValue()))));console.log(t)}populateShips(){const e=[5,4,3,3,2];for(const i of e){let e=!1;for(;!e;){const s=Math.floor(Math.random()*this.rows),r=Math.floor(Math.random()*this.cols),o=Math.random()<.5?"h":"v";if(e=this.validPlacement(i,s,r,o),e[0]){const o=new t(i,s,r,e[1]);for(let t=0;t<i;t++)"vertical"===e[1]?this.board[s][r+t].placeShip(o):this.board[s+t][r].placeShip(o);this.ships.push(o)}}}}validPlacement(t,e,i,s){if(e+t>this.rows||this.board[e][i].isOccupied())return[!1,""];if("v"==s){for(let s=i;s<i+t;s++)if(s>=this.cols||this.board[e][s].isOccupied())return[!1,""];for(let s=i;s<i+t;s++)if(s>=this.cols||this.board[e][s].isOccupied())return[!1,""];return i+t>=this.cols?[!1,""]:[!0,"vertical"]}for(let s=e;s<e+t;s++)if(s>=this.rows||this.board[s][i].isOccupied())return[!1,""];for(let s=e;s<e+t;s++)if(s>=this.rows||this.board[s][i].isOccupied())return[!1,""];return[!0,"horizontal"]}receiveAttack(t){const e=Math.floor((t-1)/10),i=(t-1)%10;if(e>=this.rows||i>=this.cols)return console.error("Invalid Hit: Out of Bounds"),-1;let s=this.board[e][i].strike();return console.log("Attack at ("+e+","+i+") => "+s),s}allSunk(){for(const t of this.ships)if(!t.isSunk())return!1;return!0}}class s{constructor(){this.ship=null,this.misHit=!1,this.value=""}placeShip(t){this.ship=t,this.value="X"}isOccupied(){return!!this.ship}getValue(){return this.value}strike(){return this.isOccupied()?(this.ship.hit(),!0):(this.misHit=!0,!1)}}class r{constructor(){this.b1=new i("P1"),this.b2=new i("P2"),this.activeBoard=this.b1,this.inactiveBoard=this.b2,this.gameOver=!1}switchActiveBoard(){this.activeBoard=this.activeBoard===this.b1?this.b2:this.b1,this.inactiveBoard=this.inactiveBoard===this.b1?this.b2:this.b1}checkForWinner(){return this.inactiveBoard.ships.every((t=>t.isSunk()))?(this.gameOver=!0,this.activeBoard.player):null}isGameOver(){return this.gameOver}playRound(t){const e=Math.floor((t-1)/10),i=(t-1)%10;console.log(`${this.activeBoard.player.name} is striking at: ${t}...`);let s=this.inactiveBoard.receiveAttack(t);this.activeBoard.board[e][i].value=1==s?"H":"M";const r=this.checkForWinner();var o;r&&(console.log(`Player ${r.name} wins!`),o=r.name,document.querySelector(".winner").textContent="Winner: "+o,document.querySelector(".board").remove()),this.switchActiveBoard()}}new class{constructor(){this.game=new r,this.playerTurnDiv=document.querySelector(".turn");const t=document.querySelector("#b1"),e=document.querySelector("#b2");this.activeBoardDiv=t,this.inactiveBoardDiv=e,this.updateScreen=()=>{this.updateBoard(t,this.game.b1),this.updateBoard(e,this.game.b2);const i=this.game.activeBoard.player;this.playerTurnDiv.textContent=`${i.name}'s turn...`};const i=t=>{const e=t.target.dataset.idx;e&&t.currentTarget===this.activeBoardDiv&&(this.game.playRound(e),this.updateScreen())};t.addEventListener("click",i),e.addEventListener("click",i),this.updateScreen()}updateBoard(t,e){t.textContent="",e.board.forEach(((i,s)=>{i.forEach(((i,r)=>{const o=document.createElement("button");o.classList.add("cell"),o.dataset.idx=s*e.cols+r+1,o.textContent=i.getValue(),this.styleCell(o,i.getValue()),t.appendChild(o)}))}))}styleCell(t,e){switch(e){case"X":t.style.backgroundColor="red";break;case"M":t.style.backgroundColor="blue";break;case"H":t.style.backgroundColor="green"}}}})();