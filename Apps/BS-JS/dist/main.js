(()=>{"use strict";class t{constructor(t,i){this.hitsIncurred=0,this.length=t,this.orientation=i}hit(){this.hitsIncurred++}isSunk(){return this.hitsIncurred==this.length}}class i{constructor(t){this.name=t}}class e{orientations=["v","h"];constructor(t){this.rows=10,this.cols=10,this.board=[],this.ships=[],this.player=new i(t);for(let t=0;t<this.rows;t++){this.board[t]=[];for(let i=0;i<this.cols;i++)this.board[t].push(new s)}this.populateShips(5)}printToConsole(){const t=this.board.map((t=>t.map((t=>t.getValue()))));console.log(t)}populateShips(i){const e=[6,5,4,3];for(;this.ships.length<i;){const i=e[Math.floor(Math.random()*e.length)];let s=!1;for(;!s;){const e=Math.floor(Math.random()*this.rows),r=Math.floor(Math.random()*this.cols),o=Math.random()<.5?"h":"v";if(s=this.validPlacement(i,e,r,o),s[0]){const o=new t(i,e,r,s[1]);for(let t=0;t<i;t++)"vertical"===s[1]?this.board[e][r+t].placeShip(o):this.board[e+t][r].placeShip(o);this.ships.push(o)}}}}validPlacement(t,i,e,s){if(i+t>this.rows||this.board[i][e].isOccupied())return[!1,""];if("v"==s){for(let s=e;s<e+t;s++)if(s>=this.cols||this.board[i][s].isOccupied())return[!1,""];for(let s=e;s<e+t;s++)if(s>=this.cols||this.board[i][s].isOccupied())return[!1,""];return e+t>=this.cols?[!1,""]:[!0,"vertical"]}for(let s=i;s<i+t;s++)if(s>=this.rows||this.board[s][e].isOccupied())return[!1,""];for(let s=i;s<i+t;s++)if(s>=this.rows||this.board[s][e].isOccupied())return[!1,""];return[!0,"horizontal"]}receiveAttack(t){const i=Math.floor((t-1)/10),e=(t-1)%10;if(i>=this.rows||e>=this.cols)return console.error("Invalid Hit: Out of Bounds"),-1;let s=this.board[i][e].strike();return console.log("Attack at ("+i+","+e+") => "+s),s}allSunk(){for(const t of this.ships)if(!t.isSunk())return!1;return!0}}class s{constructor(){this.ship=null,this.misHit=!1,this.value=""}placeShip(t){this.ship=t,this.value="X"}isOccupied(){return!!this.ship}getValue(){return this.value}strike(){return this.isOccupied()?(this.ship.hit(),!0):(this.misHit=!0,!1)}}class r{constructor(){this.b1=new e("P1"),this.b2=new e("P2"),this.activeBoard=this.b1,this.inactiveBoard=this.b2,this.gameOver=!1}switchActiveBoard(){this.activeBoard=this.activeBoard===this.b1?this.b2:this.b1,this.inactiveBoard=this.inactiveBoard===this.b1?this.b2:this.b1}checkForWinner(){return this.inactiveBoard.ships.every((t=>t.isSunk()))?(this.gameOver=!0,this.activeBoard.player):null}isGameOver(){return this.gameOver}playRound(t){const i=Math.floor((t-1)/10),e=(t-1)%10;console.log(`${this.activeBoard.player.name} is striking at: ${t}...`);let s=this.inactiveBoard.receiveAttack(t);this.activeBoard.board[i][e].value=1==s?"H":"M";const r=this.checkForWinner();var o;r&&(console.log(`Player ${r.name} wins!`),o=r.name,document.querySelector(".winner").textContent="Winner: "+o,document.querySelector(".board").remove()),this.switchActiveBoard()}}const o=new class{constructor(){this.game=new r,this.playerTurnDiv=document.querySelector(".turn");const t=document.querySelector("#b1"),i=document.querySelector("#b2");this.activeBoardDiv=t,this.inactiveBoardDiv=i,this.updateScreen=()=>{const s=this.game.activeBoard.player;this.playerTurnDiv.textContent=`${s.name}'s turn...`,this.activeBoardDiv=s===this.game.b1.player?t:i,this.inactiveBoardDiv=this.activeBoardDiv===t?i:t,this.activeBoardDiv.addEventListener("click",e),this.inactiveBoardDiv.removeEventListener("click",e),this.updateBoard(this.activeBoardDiv,this.game.activeBoard),this.updateBoard(this.inactiveBoardDiv,this.game.inactiveBoard)};const e=t=>{console.log("click; active board: "+this.game.activeBoard.player.name);const i=t.target.dataset.idx;i&&t.currentTarget===this.activeBoardDiv&&(this.game.playRound(i),this.updateScreen())};this.updateScreen()}updateBoard(t,i){t.textContent="",i.board.forEach(((e,s)=>{e.forEach(((e,r)=>{const o=document.createElement("button");o.classList.add("cell"),o.dataset.idx=s*i.cols+r+1,o.textContent=e.getValue(),this.styleCell(o,e.getValue()),t.appendChild(o)}))}))}styleCell(t,i){switch(i){case"X":t.style.backgroundColor="red";break;case"M":t.style.backgroundColor="blue";break;case"H":t.style.backgroundColor="green"}}};o.game.activeBoard.printToConsole(),console.log(o.game.activeBoard.ships),o.game.inactiveBoard.printToConsole(),console.log(o.game.inactiveBoard.ships)})();